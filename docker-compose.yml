version: "3.2"
services:
  redis:
    container_name: redis
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - 6379:6379

  api:
    depends_on: [postgres, redis]
    build:
      context: .
      dockerfile: src/docker/node.Dockerfile
    command: "npm run start:dev"
    working_dir: "/src"
    volumes:
      - .:/src
      - node_modules:/src/node_modules
    ports:
      - 8888:8888

  worker-reviewer:
    container_name: worker-reviewer
    depends_on: [postgres, redis]
    build:
      context: .
      dockerfile: src/docker/node.Dockerfile
    command: "npm run start:w1:dev"
    working_dir: "/src"
    volumes:
      - .:/src
      - node_modules:/src/node_modules

  worker-notify:
    container_name: worker-notify
    depends_on: [postgres, redis]
    build:
      context: .
      dockerfile: src/docker/node.Dockerfile
    command: "npm run start:w2:dev"
    working_dir: "/src"
    volumes:
      - .:/src
      - node_modules:/src/node_modules

  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: src/docker/DB.Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  adminer:
    image: adminer
    ports:
      - 8080:8080

volumes:
  node_modules:
